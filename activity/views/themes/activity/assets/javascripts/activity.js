"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?t(require("jquery")):t(jQuery)}(function(r){var i=window.Mustache,n="qor.activity",t="enable."+n,e="click."+n,o="submit."+n,s=".qor-activities__header button",a=".qor-activity__new-note_form",d=".qor-activity__lists",c="is-active",l="#activity-lists";function f(t,i){this.$element=r(t),this.options=r.extend({},f.DEFAULTS,r.isPlainObject(i)&&i),this.init()}return f.prototype={constructor:f,init:function(){this.bind(),this.initTabs()},bind:function(){this.$element.on(e,".qor-activity__edit-button",this.click.bind(this)).on(o,"#activity-lists form",this.submit.bind(this)).on(e,s,this.tabClick.bind(this))},unbind:function(){this.$element.off(e).off(o)},submit:function(t){var i,e=r(t.target),o=this,n=r(l).data().noteTitle;return t.preventDefault(),i=e.serialize(),r.ajax(e.prop("action"),{method:e.prop("method"),data:i,dataType:"json",headers:{Accept:"application/json; charset=utf-8"}}).done(function(t){t.errors||(t.NoteTitle=n,e.is(".qor-activity__edit-note_form")&&(o.hideEditForm(e),e.find(".qor-activity__list-note").html(t.Note)),e.is(a)&&(r(d).prepend(o.renderActivityList(t)),o.clearForm()))}),!1},renderActivityList:function(t){return i.render(f.ACTIVITY_LIST_TEMPLATE,t)},clearForm:function(){var t=r(a).find('textarea[data-toggle="qor.redactor"]');t.length&&t.redactor("code.set",""),r(a).find('[name="QorResource.Content"],[name="QorResource.Note"]').val(""),r(a).find(":submit").attr("disabled",!0)},click:function(t){var i=r(t.target).closest(".qor-activity__list");this.showEditForm(i),t.stopPropagation()},tabClick:function(t){var e=this,i=this.$element,o=r(t.target),n=o.data("id"),a=o.data("resource-url");o.is(".qor-tab__activity")&&o.hasClass(c)||(i.find(".qor-activities__content").hide(),i.find(n).show(),i.find(s).removeClass(c),o.addClass(c),a?r.ajax({url:a,method:"GET",dataType:"json",headers:{Accept:"application/json; charset=utf-8"},success:function(t){if(t.length){r(d).html("");for(var i=t.length-1;0<=i;i--)t[i].NoteTitle=r(l).data().noteTitle,r(d).append(e.renderActivityList(t[i]))}r(d).find(".mdl-spinner").remove()}}):r(d).find(".mdl-spinner").remove())},showEditForm:function(t){t.find(".qor-activity__list-note,.qor-activity__edit-button").removeClass("show").addClass("hide"),t.find(".qor-activity__edit-feilds,.qor-activity__edit-save-button").removeClass("hide").addClass("show")},hideEditForm:function(t){t.find(".qor-activity__list-note,.qor-activity__edit-button").removeClass("hide").addClass("show"),t.find(".qor-activity__edit-feilds,.qor-activity__edit-save-button").removeClass("show").addClass("hide")},initTabs:function(){var t=this.$element.closest(".mdl-layout__content.qor-page"),i=r.fn.afterQorActivityinit;if(t.length){var e=r('[data-toggle="qor.activity"]');e.appendTo(t),t.find(".qor-page__body,.qor-page__header").appendTo(e.find("#activity-form")),r(".qor-form-container.qor-pulish2__action").prependTo(e.find("#activity-form")),i&&r.isFunction(i)&&i()}},destroy:function(){this.unbind(),this.$element.removeData(n)}},f.DEFAULTS={},f.ACTIVITY_LIST_TEMPLATE='<div class="qor-activity__list">\n            <form class="qor-activity__edit-note_form" action="[[ URL ]]" method="POST">\n                <input type="hidden" name="QorResource.ID" value="[[ ID ]]">\n                <div class="qor-activity__list-title">\n                    <strong>[[ CreatorName ]]</strong> <span>[[ Action ]]</span>\n                </div>\n                <div class="qor-activity__list-date">\n                    [[ UpdatedAt ]]\n                </div>\n                <div class="qor-activity__list-content">[[ &Content ]]</div>\n                <div>\n                    <strong class="qor-activity__list-note-title">[[ NoteTitle ]]</strong>\n                    <span class="qor-activity__list-note">[[ Note ]]</span>\n                    <a class="mdl-button mdl-js-button mdl-button--icon qor-activity__edit-button" href="#">\n                        <i class="material-icons md-18 qor-activity__edit-button">edit</i>\n                    </a>\n                    <div class="mdl-textfield mdl-js-textfield qor-activity__edit-feilds">\n                        <label class="mdl-textfield__label">[[ Note ]]</label>\n                        <input class="mdl-textfield__input" type="text" name="QorResource.Note" value="[[ Note ]]">\n                    </div>\n                    <button class="mdl-button mdl-js-button mdl-button--icon qor-activity__edit-save-button" type="submit"><i class="material-icons md-24">done</i></button>\n                </div>\n            </form>\n        </div>',f.plugin=function(o){return this.each(function(){var t,i=r(this),e=i.data(n);if(!e){if(/destroy/.test(o))return;i.data(n,e=new f(this,o))}"string"==typeof o&&r.isFunction(t=e[o])&&t.apply(e)})},r.fn.qorSliderAfterShow.qorActivityinit=function(){var t=r(".qor-slideout > .qor-slideout__body"),i=r('[data-toggle="qor.activity"]'),e=r(".qor-form-container.qor-pulish2__action"),o=i.find("#activity-form"),n=r.fn.afterQorActivityinit;t.length&&(i.appendTo(t),t.find(".qor-page__body,.qor-page__header").appendTo(o)),e.length&&(e.prependTo(o),n&&r.isFunction(n)&&n())},r(function(){var i='[data-toggle="qor.activity"]';r(document).on("disable.qor.activity",function(t){f.plugin.call(r(i,t.target),"destroy")}).on(t,function(t){f.plugin.call(r(i,t.target))}).triggerHandler(t)}),f});